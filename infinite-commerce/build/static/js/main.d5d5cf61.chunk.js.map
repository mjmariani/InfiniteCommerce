{"version":3,"sources":["features/userSlice.js","api.js","SideDrawer.js","NavBar.js","Info.js","moreInfo.js","AlertDismissible.js","SignUp.js","LogIn.js","EditProfile.js","filter.js","searchBar.js","filterCard.js","productPage.js","homepage.js","App.js","app/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","cart","reducers","loginState","state","action","payload","logoutState","shoppingCartState","actions","selectUser","BASE_URL","process","REACT_APP_BASE_URL","CommerceAPI","endpoint","token","data","method","console","debug","url","headers","Authorization","params","axios","error","response","message","Array","isArray","this","request","res","username","user_id","store_name","asin","quantity","SideDrawer","show","click","refreshCart","setRefreshCart","userState","useSelector","sideDrawerClass","push","dispatch","useDispatch","a","getAllItemsInShoppingCart","cartDataRes","useState","setCartData","itemCount","setItemCount","setCountToZero","checkout","newShoppingCart","new_shopping_cart_id","getUserInfo","updatedUserData","first_name","firstname","last_name","lastname","is_admin","isadmin","shopping_cart_id","email","loggedIn","useEffect","cartDataDB","updateCartData","className","join","onClick","to","variant","checkoutItemCount","NavBar","userLoggedIn","history","useHistory","sideToggle","setSideToggle","Navbar","bg","Container","Brand","as","Link","Nav","evt","preventDefault","handleLogout","fontSize","htmlColor","Info","class","Button","MoreInfo","Tab","id","defaultActiveKey","Col","sm","ListGroup","Item","href","Content","Pane","eventKey","AlertDismissible","msg","Alert","Heading","SignUp","setData","errorFlag","setErrorFlag","handleChange","target","value","fData","handleSubmit","register","userInfo","user_data","localStorage","setItem","JSON","stringify","password","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","Text","Login","login","Profile","edit","Filter","filterData","React","setValue","event","FormControl","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","label","SearchBar","searchData","api_key","amazon_domain","getSuggestions","search_term","sort_by","customer_location","trim","toLowerCase","log","get","search_results","htmlFor","Input","e","FilterCard","suggestion","key","itemsInCart","addItemToShoppingCart","src","image","title","link","addToCart","ProductPage","setError","setFilterData","filter","map","result","index","Home","document","body","style","backgroundImage","getUserInfoFromLocalStorage","getItem","parsedUserInfo","parse","exact","path","App","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.d5d5cf61.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n    name:\"user\", \r\n    initialState:{\r\n        user:null,\r\n        cart: null,\r\n    },\r\n    reducers:{\r\n        loginState: (state, action) => {\r\n            state.user = action.payload;\r\n        },\r\n        logoutState: (state) => {\r\n            state.user = null;\r\n        },\r\n        shoppingCartState: (state, action) => {\r\n            state.cart = action.payload;\r\n        }\r\n    },\r\n});\r\n\r\nexport const {loginState, logoutState, shoppingCartState} = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport const selectCart = (state) => state.user.cart;\r\n\r\nexport default userSlice.reducer;","import axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\r\n\r\n/** API Class.\r\n *\r\n * Static class tying together methods used to get/send to to the API.\r\n *\r\n */\r\n\r\nclass CommerceAPI {\r\n\r\n    //Source: Springboard (Jobly Project)\r\n    //leveraged as a helper method to make requests to node.js backend server\r\n\r\n    //static token;\r\n    static async request(endpoint, token = \"\", data = {}, method = \"get\") {\r\n\r\n        console.debug(\"API Call:\", endpoint, data, method);\r\n    \r\n        //there are multiple ways to pass an authorization token, this is how you pass it in the header.\r\n        //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\r\n        const url = `${BASE_URL}/${endpoint}`;\r\n        const headers = { Authorization: `Bearer ${token}` };\r\n        const params = (method === \"get\")\r\n            ? data\r\n            : {};\r\n    \r\n        try {\r\n        return (await axios({ url, method, data, params, headers })).data;\r\n        } catch (err) {\r\n        console.error(\"API Error:\", err.response);\r\n        let message = err.response.data.error.message;\r\n        throw Array.isArray(message) ? message : [message];\r\n        }\r\n    }\r\n    \r\n    // Individual API routes\r\n\r\n    /** Login */\r\n\r\n    // Params { data }\r\n    //Returns { token }\r\n\r\n    static async login(data, token) {\r\n        let res = await this.request(`auth/token`, token, data, \"post\");\r\n        return res;\r\n    }\r\n    \r\n    /** Register */\r\n\r\n    // Params { data }\r\n    //Returns { token }\r\n\r\n    static async register(data, token) {\r\n        //console.log(data)\r\n        let res = await this.request(`auth/register`, token, data, \"post\");\r\n        return res;\r\n    }\r\n\r\n    /** Edit user profile. */\r\n\r\n    // Params { data, username }\r\n    //Returns { username, first_name, last_name, email, isAdmin }\r\n\r\n    static async edit(data, username, token) {\r\n        let res = await this.request(`users/${username}`, token, data, \"patch\");\r\n        return res;\r\n    }\r\n\r\n    /** Get User Info. */\r\n\r\n        // Params { username }\r\n        //Returns { user_id, username, first_name, last_name, is_admin, shopping_cart_id, email }\r\n\r\n        static async getUserInfo(username, token) {\r\n            let res = await this.request(`users/${username}`, token);\r\n            return res;\r\n        }\r\n\r\n    /** Get all items in shopping cart for user */\r\n\r\n    // Params { username, user_id }\r\n    //Returns { shopping_cart_id, items: [ {item_id, shopping_cart_id, store_name, asin, quantity }, ... ]} \r\n\r\n    static async getAllItemsInShoppingCart(username, user_id, token){\r\n        let res = await this.request(`users/${username}/${user_id}/shoppingcart`, token);\r\n        return res;\r\n    }\r\n\r\n    /** Add an item to shopping cart for user */\r\n\r\n    //Params {username, user_id, store_name, asin}\r\n    //Returns { shopping_cart_id, items: [ {item_id, store_name, shopping_cart_id, asin, quantity }, ... ]} (all items in current cart)\r\n\r\n    static async addItemToShoppingCart(username, user_id, store_name, asin, token){\r\n        let res = await this.request(`users/${username}/${user_id}/shoppingcart/${store_name}/${asin}`, token, {}, \"post\");\r\n        return res;\r\n\r\n    }\r\n\r\n    /** Delete an item from shopping cart for user */\r\n\r\n    //Params {username, user_id, store_name, asin}\r\n    //Returns { \"successful\" if successful, otherwise \"not successful\" }\r\n\r\n    static async deleteItem(username, user_id, store_name, asin, token){\r\n        let res = await this.request(`users/${username}/${user_id}/shoppingcart/${store_name}/${asin}`, token, {},\"delete\");\r\n        return res;\r\n    }\r\n\r\n    /** Checkout shopping cart for user */\r\n\r\n    //Params {username, user_id}\r\n    //Returns (new shopping cart with items in it) {shopping_cart_id, items: [ {item_id, store_name, shopping_cart, asin }, ... ]}\r\n\r\n    static async checkout(username, user_id, token){\r\n        let res = await this.request(`users/${username}/${user_id}/shoppingcart`, token, {}, \"post\");\r\n        return res;\r\n    }\r\n\r\n    /** Update quantity for an item for user */\r\n\r\n    //Params {username, user_id, store_name, asin, quantity}\r\n    //Returns { [ {item_id, store_name, shopping_cart_id, asin, quantity }, ... ]}\r\n\r\n    static async updateQuantity(username, user_id, store_name, asin, quantity, token){\r\n        let res = await this.request(`users/${username}/${user_id}/shoppingcart/${asin}/${quantity}`, token, {}, \"post\");\r\n        return res;\r\n    }\r\n\r\n}\r\n\r\nexport default CommerceAPI;","import './SideDrawer.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport CommerceAPI from \"./api\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {selectUser, selectCart} from \"./features/userSlice\";\r\nimport { shoppingCartState, loginState } from \"./features/userSlice\";\r\n\r\nconst SideDrawer = ({show, click, refreshCart, setRefreshCart}) => {\r\n    //to get user info in redux store\r\n    const userState = useSelector(selectUser);\r\n\r\n    //in order to add a class for styling depending on whether it's toggled or not\r\n    const sideDrawerClass = [\"sidedrawer\"];\r\n\r\n    if(show){\r\n        sideDrawerClass.push(\"show\")\r\n    }\r\n\r\n    //to use the redux dispatch method\r\n    const dispatch = useDispatch();\r\n\r\n    //update cart data\r\n    async function updateCartData() {\r\n        const username = userState.username;\r\n        const user_id = userState.user_id;\r\n        const token = userState.token;\r\n        const cartDataRes = await CommerceAPI.getAllItemsInShoppingCart(username, user_id, token);\r\n            //add data into redux store\r\n            //save cart data in redux state\r\n            dispatch(shoppingCartState(cartDataRes))\r\n            return cartDataRes;\r\n    }\r\n\r\n\r\n    const [cartData, setCartData] = useState([]);\r\n\r\n    const setShoppingCartData = (data) => {\r\n        setCartData(data)\r\n    }\r\n\r\n    //keep track of item count in cart\r\n    const [itemCount, setItemCount] = useState(-1);\r\n\r\n    const incrementCount = () => {\r\n        setItemCount(itemCount + 1)\r\n    }\r\n\r\n    const setCountToZero = () => {\r\n        setItemCount(0)\r\n    }\r\n\r\n    //useEffect hook to be called only once to count number of items in cart after log in first time\r\n    // useEffect(() => {\r\n    //     let count = 0;\r\n    //     const cartData = updateCartData();\r\n    //     if(cartData){\r\n    //         cartData.map(() => {\r\n    //             count++;\r\n    //         })\r\n    //     }\r\n    //     setItemCount(count);\r\n    // }, []);\r\n\r\n    //for everytime the refreshcart flag is turned to true (means everytime an item is added)\r\n    useEffect(() => {\r\n        if(!refreshCart){\r\n            const cartDataDB = updateCartData();\r\n\r\n            //fetch data from redux store\r\n            setShoppingCartData(cartDataDB);\r\n            incrementCount();\r\n            setRefreshCart();\r\n    }}, [refreshCart]);\r\n\r\n    async function checkoutItemCount() {\r\n        setCountToZero();\r\n        //this returns (new shopping cart with items in it) {new_shopping_cart_id, items: [ {item_id, store_name, shopping_cart, asin }, ... ]}\r\n        //implement a way to use this data in the shopping cart in the future.\r\n        \r\n        const newShoppingCart = await CommerceAPI.checkout(userState.username, userState.user_id, userState.token);\r\n        const newShoppingCartID = newShoppingCart.new_shopping_cart_id;\r\n        \r\n        //add new shoppingcart ID to redux store\r\n        const updatedUserData = await CommerceAPI.getUserInfo(userState.username, userState.token);\r\n        const token = selectUser.token;\r\n\r\n        dispatch(\r\n            loginState({\r\n            username: updatedUserData.username,\r\n            user_id: updatedUserData.user_id,\r\n            first_name: updatedUserData.firstname,\r\n            last_name: updatedUserData.lastname,\r\n            is_admin: updatedUserData.isadmin, \r\n            shopping_cart_id: updatedUserData.shopping_cart_id,\r\n            email: updatedUserData.email,\r\n            token: token,\r\n            loggedIn: true,\r\n        })\r\n        );\r\n        //setCountToZero();\r\n    }\r\n    \r\n\r\n    return (\r\n        show && <div className={sideDrawerClass.join(\" \")}>\r\n            <ul className=\"sidedrawer__links\" onClick={click}>\r\n                <li>\r\n                    <Link>\r\n                        <i className=\"fas fa-shopping-cart\"></i>\r\n                        <span>\r\n                            Cart <span className=\"sidedrawer__cartbadge\">{itemCount}</span> \r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                   <Link to=\"/products\">Shop</Link> \r\n                </li>\r\n            </ul>\r\n            <li>\r\n                {/* {cartData.map((item)=>{\r\n                    //add item imgs and title in their own box\r\n                })} */}\r\n            </li>\r\n            <li>\r\n                <a className=\"checkout__button\" variant=\"primary\" onClick={() => {checkoutItemCount()}}>Checkout</a>\r\n            </li>\r\n            \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideDrawer\r\n","import \"./NavBar.css\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n//import { Navbar, Nav, NavItem, Container } from \"reactstrap\";\r\n//import userContext from \"./userContext\"\r\n//import ShoppingCartProductCard from \"./shoppingCartProductCard\";\r\nimport { Navbar, Container, Nav } from 'react-bootstrap'\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {selectUser, logoutState} from \"./features/userSlice\";\r\nimport SideDrawer from \"./SideDrawer\";\r\n\r\nfunction NavBar({refreshCart, setRefreshCart}){\r\n\r\n    //variable used to check if user is logged in\r\n    const userLoggedIn = useSelector(selectUser);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userState = useSelector(selectUser)\r\n\r\n    const history = useHistory();\r\n\r\n    //logout\r\n    const handleLogout = (evt) => {\r\n      evt.preventDefault();\r\n      \r\n      dispatch(logoutState())\r\n      // return <Redirect to=\"/info\" />\r\n      return history.push('/info'); //redirect to '/info' page\r\n  }\r\n\r\n  const [sideToggle, setSideToggle] = useState(false);\r\n\r\n\r\n    return(\r\n        <div>\r\n          { (!userLoggedIn) ? \r\n            <><Navbar bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n              <Navbar.Brand as={Link} to=\"/\" className=\"navLogo\">InfiniteCommerce</Navbar.Brand>\r\n\r\n              <Nav className=\"ml-12 nav\">\r\n                <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/signup\">Sign Up</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/info\">Info</Nav.Link>\r\n              </Nav>\r\n\r\n            </Container>\r\n          </Navbar><br /></> :\r\n          <><Navbar bg=\"dark\" variant=\"dark\">\r\n          <Container>\r\n          <Navbar.Brand as={Link} to=\"/\" className=\"navLogo\">InfiniteCommerce</Navbar.Brand>\r\n\r\n          <Nav className=\"ml-12 nav\">\r\n            <Nav.Link as={Link} >Logged in as: {userState.username}  </Nav.Link>\r\n            <Nav.Link as={Link} onClick={(evt) => handleLogout(evt)}>Logout</Nav.Link>\r\n            <Nav.Link as={Link} to=\"/info\">Info</Nav.Link>\r\n            <Nav.Link as={Link} to=\"/products\">Products</Nav.Link>\r\n            <Nav.Link as={Link} to=\"/profile\">Profile</Nav.Link>\r\n            <Nav.Link><ShoppingBasketIcon fontSize='small' htmlColor='white' className=\"cart\" onClick={() => setSideToggle(!sideToggle)}/></Nav.Link>\r\n            <SideDrawer show={sideToggle} click={() => setSideToggle(!sideToggle)} refreshCart={refreshCart} setRefreshCart={setRefreshCart} /> \r\n          </Nav>\r\n          </Container>\r\n          </Navbar><br /></>\r\n        }\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default NavBar;","import './Info.css';\r\nimport { Button } from 'react-bootstrap'\r\nimport {Link, useParams } from \"react-router-dom\";\r\n// import {Helmet} from 'react-helmet';\r\n\r\nfunction Info(){\r\n\r\n    return( \r\n        <div class=\"info\">\r\n            {/* <Helmet>\r\n                <style>{'body { background-image: \"url(\\'https://media.giphy.com/media/kG3EDN0eXqq4V1Pd6W/giphy.gif\\')\"; } '}</style>\r\n            </Helmet> */}\r\n            <h1>Welcome to InfiniteCommerce!</h1><br/>\r\n            <p>Click below for more info or sign up/login!</p>\r\n            <Link to=\"/info\">\r\n            <Button variant=\"outline-primary\">More Info!</Button>\r\n            </Link>\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default Info;","import './moreInfo.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport { Tab, Col, Row } from 'react-bootstrap'\r\n\r\nimport 'react-accessible-accordion/dist/fancy-example.css';\r\n\r\nfunction MoreInfo(){\r\n\r\n    return (\r\n        <div class=\"moreInfo\">\r\n            \r\n            <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\" >\r\n                \r\n                    <Col sm={4} >\r\n                        <ListGroup class=\"centered\">\r\n                            <ListGroup.Item action href=\"#about\">\r\n                                About\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item action href=\"#step1\">\r\n                                Step 1\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item action href=\"#step2\">\r\n                                Step 2\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item action href=\"#profile\">\r\n                                Profile Update\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item action href=\"#shoppingcart\">\r\n                                Shopping Cart\r\n                            </ListGroup.Item>\r\n                            </ListGroup>\r\n                    </Col>\r\n                    <Col sm={8} >\r\n                        <Tab.Content class=\"centered-tab\">\r\n                            <Tab.Pane eventKey=\"#about\">\r\n                                <p></p>\r\n                                <p>This website is a site built using the React.js framework on the front-end and Node.js (express.js framework) on the back-end where one can search for any products on Amazon or Ebay. \r\n                                    The products searches are pulled using the Rainforest API. Once selected, then the products can be added to the shopping cart \r\n                                    and then checked-out.\r\n                                </p>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"#step1\"> \r\n                                <p></p>\r\n                                <p>Sign up for an account by clicking on sign up</p>        \r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"#step2\">\r\n                                <p></p>\r\n                                <p>Search for products to buy by clicking on Products link on navbar</p>         \r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"#profile\">\r\n                                <p></p>\r\n                                <p>You can also update your profile once registered to the site</p>         \r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"#shoppingcart\">\r\n                            <p></p>\r\n                                <p>Click on the shopping cart icon to view your current shopping cart and checkout</p>         \r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                    </Col>\r\n                \r\n            </Tab.Container>\r\n        </div> \r\n        )\r\n}\r\n\r\nexport default MoreInfo;","import Form from 'react-bootstrap/Form';\r\nimport { Button } from 'react-bootstrap';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport React, {useState} from 'react';\r\nfunction AlertDismissible({msg}) {\r\n    //const [show, setShow] = useState(true);\r\n  \r\n      return (\r\n        <Alert variant=\"danger\" >\r\n          <Alert.Heading>{msg}</Alert.Heading>\r\n        </Alert>\r\n      );\r\n  }\r\n  \r\nexport default AlertDismissible;","import \"./SignUp.css\";\r\nimport AlertDismissible from \"./AlertDismissible\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Button } from 'react-bootstrap';\r\nimport CommerceAPI from \"./api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport { loginState } from \"./features/userSlice\";\r\n\r\nfunction SignUp(){\r\n\r\n    let [data, setData]=useState({});\r\n\r\n    let [errorFlag, setErrorFlag] = useState(false);\r\n\r\n    const handleChange = evt => {\r\n        const { name, value } = evt.target;\r\n        setData(fData => ({\r\n        ...fData,\r\n        [`${name}`]: value\r\n        }));\r\n    }\r\n\r\n    const changeErrorFlag = () => {\r\n        setErrorFlag(errorFlag => !errorFlag);\r\n    }\r\n\r\n    //to use the redux dispatch method\r\n    const dispatch = useDispatch();\r\n\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async (data) => {\r\n        try{\r\n            const userInfo = await register(data)\r\n\r\n            dispatch(\r\n                loginState({\r\n                    username: userInfo[1].user.username,\r\n                    user_id: userInfo[1].user.user_id,\r\n                    first_name: userInfo[1].user.firstname,\r\n                    last_name: userInfo[1].user.lastname,\r\n                    is_admin: userInfo[1].user.isadmin, \r\n                    shopping_cart_id: userInfo[1].user.shopping_cart_id,\r\n                    email: userInfo[1].user.email,\r\n                    token: userInfo[0].token,\r\n                    loggedIn: true,\r\n            })\r\n            );\r\n            debugger;\r\n\r\n            const user_data = {\r\n                username: userInfo[1].user.username,\r\n                user_id: userInfo[1].user.user_id,\r\n                first_name: userInfo[1].user.firstname,\r\n                last_name: userInfo[1].user.lastname,\r\n                is_admin: userInfo[1].user.isadmin, \r\n                shopping_cart_id: userInfo[1].user.shopping_cart_id,\r\n                email: userInfo[1].user.email,\r\n                token: userInfo[0].token,\r\n                loggedIn: true,\r\n            }\r\n\r\n            //put user info into local storage\r\n            localStorage.setItem('user_data', JSON.stringify(user_data));\r\n\r\n            // return <Redirect to=\"/products\" />\r\n            return history.push('/products'); //redirect to '/products' page using useHistory hook\r\n        }catch(err){\r\n            return <p>{err.message}</p>\r\n        }\r\n    }\r\n\r\n    const register = async (data) => {\r\n        try{\r\n            //debugger;\r\n            let token = await CommerceAPI.register(data);\r\n\r\n            //save token info in redux state\r\n            dispatch(\r\n                loginState({\r\n                    username: data.username,\r\n                    password: data.password,\r\n                    token: token.token,\r\n                    loggedIn: true,\r\n                })\r\n            )\r\n\r\n            CommerceAPI.token = token.token;\r\n\r\n            let user = await CommerceAPI.getUserInfo(data.username, token.token);\r\n\r\n            return [token, user];\r\n\r\n        }catch(err){\r\n            changeErrorFlag();\r\n            return <p>{err.message}</p>\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n        { errorFlag === true && <AlertDismissible msg={\"Sign Up Error\"}/>}\r\n        <div className=\"sign-up-form\">\r\n            <h2>Sign Up!</h2>\r\n            <p></p>\r\n            <Form onSubmit={(evt)=> {evt.preventDefault(); handleSubmit(data)}}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" name = \"username\" value={data.username} placeholder=\"Username\" onChange={handleChange} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control type=\"text\" name = \"firstName\" value={data.first_name} placeholder=\"First Name\" onChange={handleChange} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control type=\"text\" name = \"lastName\" value={data.last_name} placeholder=\"Last Name\" onChange={handleChange}/>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" name = \"email\" value={data.email} placeholder=\"Enter email\" onChange={handleChange} />\r\n                    <Form.Text className=\"text-muted\">\r\n                    I'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" name = \"password\" value={data.password} placeholder=\"Password\" onChange={handleChange}/>\r\n                    <Form.Text className=\"text-muted\">\r\n                    I'll never share your password with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                \r\n                <Button variant=\"primary\" type=\"submit\" id=\"button\">\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUp;","import \"./LogIn.css\";\r\nimport AlertDismissible from \"./AlertDismissible\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CommerceAPI from \"./api\";\r\nimport React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport { loginState } from \"./features/userSlice\";\r\n\r\nfunction Login(){\r\n\r\n    let [data, setData]=useState({});\r\n\r\n    let [errorFlag, setErrorFlag] = useState(false);\r\n\r\n    const changeErrorFlag = () => {\r\n        setErrorFlag(errorFlag => !errorFlag);\r\n    }\r\n    \r\n    const handleChange = evt => {\r\n        const { name, value } = evt.target;\r\n        setData(fData => ({\r\n        ...fData,\r\n        [name]: value\r\n        }));\r\n    }\r\n\r\n    \r\n\r\n    //login\r\n    const login = async (data) => {\r\n        try{\r\n            //debugger;\r\n            let token = await CommerceAPI.login(data);\r\n            \r\n            //save token info in redux state\r\n            dispatch(\r\n                loginState({\r\n                    username: data.username,\r\n                    password: data.password,\r\n                    token: token.token,\r\n                    loggedIn: true,\r\n                })\r\n            )\r\n\r\n            let user = await CommerceAPI.getUserInfo(data.username, token.token);\r\n            return [token, user];\r\n\r\n        }catch(err){\r\n            changeErrorFlag();\r\n            return <></>;\r\n        }\r\n    }\r\n\r\n    //to use the redux dispatch method\r\n    const dispatch = useDispatch();\r\n\r\n    const history = useHistory();\r\n    \r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n        try{\r\n            \r\n            const userInfo = await login(data);\r\n            \r\n            dispatch(\r\n                loginState({\r\n                username: userInfo[1].user.username,\r\n                user_id: userInfo[1].user.user_id,\r\n                first_name: userInfo[1].user.firstname,\r\n                last_name: userInfo[1].user.lastname,\r\n                is_admin: userInfo[1].user.isadmin, \r\n                shopping_cart_id: userInfo[1].user.shopping_cart_id,\r\n                email: userInfo[1].user.email,\r\n                token: userInfo[0].token,\r\n                loggedIn: true,\r\n            })\r\n            );\r\n\r\n            const user_data = {\r\n                username: userInfo[1].user.username,\r\n                user_id: userInfo[1].user.user_id,\r\n                first_name: userInfo[1].user.firstname,\r\n                last_name: userInfo[1].user.lastname,\r\n                is_admin: userInfo[1].user.isadmin, \r\n                shopping_cart_id: userInfo[1].user.shopping_cart_id,\r\n                email: userInfo[1].user.email,\r\n                token: userInfo[0].token,\r\n                loggedIn: true,\r\n            }\r\n\r\n            //put user info into local storage\r\n            localStorage.setItem('user_data', JSON.stringify(user_data));\r\n\r\n            // return <Redirect to=\"/products\" />\r\n            return history.push('/products'); //redirect to '/products' page using useHistory hook\r\n\r\n        }catch(err){\r\n            \r\n            return <></>\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n        { errorFlag === true && <AlertDismissible msg={\"Log In Error\"}/>}\r\n        <div class=\"login-form\">\r\n            <h2>Login</h2>\r\n            <p></p>\r\n            <Form onSubmit={(evt)=>{handleSubmit(evt)}}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" name= \"username\" value={data.username} placeholder=\"Username\" onChange={handleChange} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" name= \"password\" value={data.password} placeholder=\"Password\" onChange={handleChange} />\r\n                    <Form.Text className=\"text-muted\">\r\n                    I'll never share your password with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                \r\n                <Button variant=\"primary\" id=\"button\" type=\"submit\">\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </div></>\r\n    )\r\n}\r\n\r\nexport default Login;","import Form from 'react-bootstrap/Form';\r\nimport { Button } from 'react-bootstrap';\r\nimport \"./EditProfile.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport React, {useState} from 'react';\r\nimport CommerceAPI from \"./api\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {selectUser, logoutState} from \"./features/userSlice\";\r\nimport { loginState } from \"./features/userSlice\";\r\n\r\nfunction Profile(){\r\n\r\n    let [data, setData]=useState({});\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //user info\r\n    const userState = useSelector(selectUser)\r\n\r\n    const handleChange = evt => {\r\n        const { name, value } = evt.target;\r\n        setData(fData => ({\r\n        ...fData,\r\n        [`${name}`]: value\r\n        }));\r\n    }\r\n\r\n    const handleSubmit = async (data) => {\r\n        try{\r\n            await edit(data)\r\n            return <Redirect to=\"/products\" />\r\n        }catch(err){\r\n            return <p>{err.message}</p>\r\n        }\r\n    }\r\n\r\n    //edit profile\r\n    //returns user info\r\n    //username comes from redux userState store\r\n    const edit = async (data, username = userState.username) => {\r\n        try{\r\n            let res = await CommerceAPI.edit(data, username, userState.token);\r\n\r\n            let user = await CommerceAPI.getUserInfo(username, userState.token);\r\n\r\n            dispatch(\r\n                loginState({\r\n                    username: user.user.username,\r\n                    user_id: user.user.user_id,\r\n                    first_name: user.user.first_name,\r\n                    last_name: user.user.last_name,\r\n                    is_admin: user.user.is_admin, \r\n                    shopping_cart_id: user.user.shopping_cart_id,\r\n                    email: user.user.email,\r\n                    token: userState.token,\r\n                    loggedIn: true,\r\n            })\r\n            );\r\n\r\n            const user_data = {\r\n                username: user.user.username,\r\n                user_id: user.user.user_id,\r\n                first_name: user.user.first_name,\r\n                last_name: user.user.last_name,\r\n                is_admin: user.user.is_admin, \r\n                shopping_cart_id: user.user.shopping_cart_id,\r\n                email: user.user.email,\r\n                token: userState.token,\r\n                loggedIn: true,\r\n            }\r\n\r\n            //put user info into local storage\r\n            localStorage.setItem('user_data', JSON.stringify(user_data));\r\n            //saveUser(user);\r\n            return;\r\n\r\n        }catch(err){\r\n            return <p>{err.message}</p>\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <div class=\"edit-profile-form\">\r\n            <h2>Edit Profile</h2>\r\n            <p></p>\r\n            <Form onSubmit={(evt)=> {evt.preventDefault(); handleSubmit(data)}}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control type=\"text\" name = \"first_name\" value={data.first_name} placeholder={(userState) ? userState.first_name : \"FirstName\"} onChange={handleChange} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control type=\"text\" name = \"last_name\" value={data.last_name} placeholder={(userState) ? userState.last_name : \"Last Name\"} onChange={handleChange} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" name = \"email\" value={data.email} placeholder={(userState) ? userState.email : \"Email\"} onChange={handleChange} />\r\n                    <Form.Text className=\"text-muted\">\r\n                    I'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" name = \"password\" value={data.password} placeholder=\"Password\" onChange={handleChange} />\r\n                    <Form.Text className=\"text-muted\">\r\n                    I'll never share your password with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                \r\n                <Button variant=\"primary\" type=\"submit\" id=\"button\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import \"./filter.css\";\r\nimport React, { useState, useEffect, useContext, useCallback } from \"react\";\r\n\r\nimport { FormControl } from '@material-ui/core';\r\nimport { FormControlLabel } from '@material-ui/core';\r\nimport { FormLabel } from '@material-ui/core';\r\nimport { Radio } from '@material-ui/core';\r\nimport { RadioGroup } from '@material-ui/core';\r\nfunction Filter ({ filterData }){\r\n\r\n    const [value, setValue] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    filterData(event.target.name, event.target.value);\r\n  };\r\n\r\n    return ( \r\n        <>\r\n        <div className=\"filter\">\r\n        <FormControl component=\"sort_by\">\r\n        <FormLabel component=\"sort_by\">Sort By</FormLabel>\r\n        <RadioGroup aria-label=\"sort_by\" name=\"sort_by\" value={value} onChange={handleChange}>\r\n            <FormControlLabel value=\"price_low_to_high\" control={<Radio />} label=\"price_low_to_high\" />\r\n            <FormControlLabel value=\"price_high_to_low\" control={<Radio />} label=\"price_high_to_low\" />\r\n            <FormControlLabel value=\"featured\" control={<Radio />} label=\"featured\" />\r\n            <FormControlLabel value=\"average_review\" control={<Radio />} label=\"average_review\" />\r\n            <FormControlLabel value=\"most_recent\" control={<Radio />} label=\"most_recent\" />\r\n        </RadioGroup>\r\n        </FormControl>\r\n\r\n        <FormControl component=\"location\">\r\n        <FormLabel component=\"location\">Location</FormLabel>\r\n        <RadioGroup aria-label=\"location\" name=\"sort_by\" value={value} onChange={handleChange}>\r\n            <FormControlLabel value=\"\" control={<Radio />} label=\"United States\" />\r\n            <FormControlLabel value=\"ca\" control={<Radio />} label=\"Canada\" />\r\n            <FormControlLabel value=\"mx\" control={<Radio />} label=\"Mexico\" />\r\n            <FormControlLabel value=\"ae\" control={<Radio />} label=\"United Arab Emirates\" />\r\n            <FormControlLabel value=\"gb\" control={<Radio />} label=\"United Kingdom\" />\r\n        </RadioGroup>\r\n        </FormControl>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter;","import \"./searchBar.css\";\r\nimport React, { useState, useEffect, useContext, useCallback } from \"react\";\r\n\r\n//Source for autocomplete code: https://www.freakyjolly.com/autocomplete-suggestion-control-using-react-autosuggest/\r\nimport Autosuggest from 'react-autosuggest';\r\nimport axios from 'axios';\r\nimport {\r\n    Button, Input, Form, FormGroup, Label\r\n} from \"reactstrap\";\r\nimport { makeStyles, IconButton, Collapse } from '@material-ui/core';\r\n\r\n\r\n//Note: implement autocomplete feature later on\r\n\r\nfunction SearchBar ({ searchData, error, filterData }) {\r\n    \r\n    let [data, setData] = useState('');\r\n\r\n    let params = {\r\n        api_key: \"2D5E73AFE55F452888AC418D292FD570\",\r\n        type: \"search\",\r\n        amazon_domain: \"amazon.com\",\r\n    };\r\n\r\n    // const { useState, useRef } = React\r\n\r\n    // const Counter = () => {\r\n    // const [count, setCount] = useState(0)\r\n    // const counterEl = useRef(null)\r\n\r\n    // const increment = () => {\r\n    // setCount(count + 1)\r\n    // console.log(counterEl)\r\n    // }\r\n\r\n    // if(nextPage === true){\r\n    //     increment();\r\n    //     params.page = `${count}`;\r\n    //     nextPage = false;\r\n    // }\r\n    \r\n    // Calling External API to get product data\r\n    let getSuggestions = async (value) => {\r\n        //isLoading();\r\n        params.search_term = `${data}`;\r\n        if(filterData.sort_by !== '' ){\r\n            params = { ...params, sort_by: filterData.sort_by[0] }\r\n        }else if(filterData.customer_location !== ''){\r\n            params = { ...params, customer_location: filterData.customer_location[0] }\r\n        }\r\n        const inputValue = value.trim().toLowerCase();\r\n        try{\r\n            console.log(params);\r\n            //console.log(\"calling API\");\r\n            let response = await axios.get('https://api.rainforestapi.com/request', { params })\r\n            \r\n            let data = response.data.search_results;\r\n            //console.log(data);\r\n            //isLoading();\r\n            //console.log('not loading');\r\n            searchData(data);\r\n        }catch(error){\r\n            //isLoading();\r\n            error(error.message);\r\n        }\r\n    };\r\n\r\n  \r\n        return (<Form className=\"search-form\" onSubmit={(evt)=>{evt.preventDefault(); getSuggestions(data);}}>\r\n                <Label htmlFor=\"header-search\"> \r\n                <span className=\"visually-hidden\">Search products</span>\r\n                </Label>\r\n                <Input\r\n                type=\"text\"\r\n                id=\"header-search\"\r\n                placeholder=\"Search products\"\r\n                name=\"search\"\r\n                value= {data}\r\n                onChange={e => setData(e.target.value)} \r\n                />\r\n                <Button type=\"submit\">Search</Button>\r\n                </Form>)\r\n}\r\n\r\nexport default SearchBar;","import \"./filterCard.css\"\r\nimport React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {selectUser} from \"./features/userSlice\";\r\nimport CommerceAPI from \"./api\";\r\nimport { shoppingCartState } from \"./features/userSlice\";\r\n\r\nfunction FilterCard({ suggestion, key, refreshCart}){\r\n//implement what happens when item is added to shopping cart\r\n\r\n//to get user info in redux store\r\nconst userState = useSelector(selectUser);\r\n\r\n//to use the redux dispatch method\r\nconst dispatch = useDispatch();\r\n\r\nasync function addToCart(evt, suggestion){\r\n    evt.preventDefault();\r\n\r\n    //send product info to shopping cart\r\n    //Returns { [ {item_id, store_name, shopping_cart_id, asin }, ... ]} (all items in current cart)\r\n    const itemsInCart = CommerceAPI.addItemToShoppingCart(userState.username, userState.user_id, 'Amazon', suggestion.asin, userState.token)\r\n\r\n    //add data into redux store\r\n    //save cart data in redux state\r\n    dispatch(\r\n        shoppingCartState(itemsInCart)\r\n    )\r\n\r\n    //update reload variable to refresh cart data\r\n    refreshCart();\r\n\r\n}\r\n\r\n    return (\r\n        <>\r\n            {/* <div className=\"col-3\">\r\n                <div className=\"card mb-1\">\r\n                <img className=\"img-top\" src={suggestion.image} className=\"card-img-top\" alt=\"product-card\"></img>\r\n                \r\n                <div className=\"card-body\">\r\n                <Link className=\"description-link\" to=\"/description\" onClick={(evt)=> {evt.preventDefault()}} ><h5 className=\"card-title\">{suggestion.title}</h5></Link>\r\n                <p className=\"card-text\"></p>\r\n                </div>\r\n                <div className=\"card-footer col-12\">\r\n                <Button variant=\"primary\" onClick={(evt)=> {evt.preventDefault(); }} >See Description</Button>\r\n                <Button className=\"amazon-link\" variant=\"primary\" href={suggestion.link}>Go to Amazon Link</Button>\r\n                {/* <Button onClick={ () => {handleAdd(\"Amazon\", suggestion.asin)} } variant=\"primary\" >Add to Shopping Cart</Button> */}\r\n                {/* </div> */}\r\n                {/* </div> */}\r\n                {/* </div> */}\r\n\r\n            <div className = \"product\">\r\n                <img className=\"img-top\" src={suggestion.image} className=\"card-img-top\" alt=\"product-card\"></img>\r\n\r\n                <div className=\"product__info\">\r\n                    <p className=\"info__name\">{suggestion.title}</p>\r\n                    <p className=\"info__description\"></p> \r\n                    {/* add description later */}\r\n                    <p className=\"info__price\"></p>\r\n                    {/* add price */}\r\n                    <a className=\"info__button\" variant=\"primary\" href={suggestion.link}>Go to Amazon Link</a>\r\n                    <br />\r\n                    <a className=\"add__button\" variant=\"primary\" onClick={(evt)=> {addToCart(evt, suggestion);}}>Add To Cart</a>\r\n                </div>\r\n            </div>    \r\n        </>\r\n\r\n        )\r\n}\r\n\r\nexport default FilterCard;","import \"./productPage.css\";\r\nimport React, { useState, useEffect, useContext, useCallback, useRef } from \"react\";\r\n//import InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Filter from \"./filter\";\r\nimport SearchBar from \"./searchBar\";\r\nimport FilterCard from \"./filterCard\"\r\n//implement next page feature\r\n//implement infinite scroll\r\n\r\nfunction ProductPage({refreshCart}){\r\n    let [data, setData] = useState('');\r\n    // let [loading, setLoading] = useState(false);\r\n    let [error, setError] = useState(\"\");\r\n    let [filterData, setFilterData] = useState({\r\n        'sort_by': '',\r\n        'customer_location': '',\r\n    });\r\n\r\n    // data = { {\r\n    //             \"position\":1\r\n    //             \"title\":\"Convenient Operation 8pcs Anti Curling Carpet Tape Anti Slip Corners Edges Gripper Pads Kitchen Bathroom Blanket Non-Slip Sticker Reusable Grip Strong Gel (Color : B)\"\r\n    //             \"asin\":\"B093GWTZSM\"\r\n    //             \"link\":\"https://www.amazon.com/dp/B093GWTZSM\"\r\n    //             \"categories\":[...]\r\n    //             \"image\":\"https://m.media-amazon.com/images/I/41PRHKl2KiS._AC_UL320_.jpg\"\r\n    //             \"is_prime\":false\r\n    //             \"is_amazon_fresh\":false\r\n    //             \"is_whole_foods_market\":false\r\n    //             \"sponsored\":false\r\n    //             } }\r\n\r\n    return (\r\n    <>\r\n                        <div className=\"search-bar\">\r\n                            <SearchBar searchData={\r\n                                (data) => setData(data)\r\n                            } error={(msg)=>setError(msg)} filterData={filterData}/>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <Filter filterData={(filter, value) => setFilterData(filterData => ({ ...filterData, [filter]: [value]}))} />\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"product__screen\">\r\n                                {(data) ? data.map((result, index) => {\r\n                            console.log(result);\r\n                                    return ( \r\n                                        \r\n                                    <FilterCard suggestion={ result } key={index} refreshCart={refreshCart}/>\r\n                                    \r\n                                    )\r\n                            \r\n                        }): <p></p>}\r\n                        \r\n                            </div>\r\n                        \r\n                            \r\n                        \r\n                        </div>\r\n                        </div>\r\n            </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ProductPage;","import './homepage.css';\r\nimport NavBar from \"./NavBar\";\r\nimport Info from \"./Info\";\r\nimport MoreInfo from \"./moreInfo\";\r\nimport SignUp from \"./SignUp\";\r\nimport LogIn from \"./LogIn\";\r\nimport EditProfile from \"./EditProfile\";\r\nimport ProductPage from \"./productPage\";\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport { loginState } from \"./features/userSlice\";\r\n//import useLocalStorage from \"./localStorage\";\r\n\r\nfunction Home(){\r\n    document.body.style.backgroundImage = \"url('https://media.giphy.com/media/kG3EDN0eXqq4V1Pd6W/giphy.gif')\";\r\n\r\n    //to use the redux dispatch method\r\n    const dispatch = useDispatch();\r\n\r\n    //to call the getUserInfoFromLocalStorage function only once\r\n    useEffect(\r\n        () => {\r\n            getUserInfoFromLocalStorage()\r\n        }, []);\r\n\r\n    //get token from local storage. if it's in there then, store the data in the redux store\r\n    const getUserInfoFromLocalStorage = () => {\r\n\r\n    const getUserInfo = localStorage.getItem('user_data');\r\n\r\n    if(getUserInfo){\r\n    //parse user data from JSON string to JS obj\r\n    const parsedUserInfo = JSON.parse(getUserInfo);\r\n\r\n    //update user state to login info from localStorage\r\n    dispatch(\r\n        loginState({\r\n        username: parsedUserInfo.username,\r\n        user_id: parsedUserInfo.user_id,\r\n        first_name: parsedUserInfo.firstname,\r\n        last_name: parsedUserInfo.lastname,\r\n        is_admin: parsedUserInfo.isadmin, \r\n        shopping_cart_id: parsedUserInfo.shopping_cart_id,\r\n        email: parsedUserInfo.email,\r\n        token: parsedUserInfo.token,\r\n        loggedIn: parsedUserInfo.loggedIn,\r\n    })\r\n    );\r\n\r\n    }\r\n    \r\n    }\r\n\r\n    //to store cart data\r\n    const [refreshCart, setRefreshCart] = useState(false);    \r\n\r\n    return( \r\n        <div className=\"Home\">\r\n            <BrowserRouter>\r\n                <NavBar refreshCart={refreshCart} setRefreshCart={() => setRefreshCart(false)}/>\r\n                <Switch>\r\n                    <Route exact path=\"/\" >\r\n                        <Info />\r\n                    </Route>\r\n                    <Route exact path=\"/info\" >\r\n                        <MoreInfo />\r\n                    </Route>\r\n                    <Route exact path=\"/signup\" >\r\n                        <SignUp />\r\n                    </Route>\r\n                    <Route exact path=\"/login\" >\r\n                        <LogIn />\r\n                    </Route>\r\n                    <Route exact path=\"/profile\" >\r\n                        <EditProfile />\r\n                    </Route>\r\n                    <Route exact path=\"/products\" >\r\n                        <ProductPage refreshCart={()=> setRefreshCart(!refreshCart)}/>\r\n                    </Route>\r\n                    {/* <Route exact path=\"/description\" >\r\n                        <Description />\r\n                    </Route> */}\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import './App.css';\r\nimport React from \"react\";\r\nimport Home from \"./homepage\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Home />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../features/userSlice\";\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        user: userReducer,\r\n    },\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\nimport Favicon from 'react-favicon'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./app/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <Favicon url='http://oflisback.github.io/react-favicon/img/github.ico' /> */}\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}